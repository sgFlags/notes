git 操作都是在本地进行的

git 分为三个部分：

本地工作目录（就是磁盘上文件的样子）                暂存区                 提交区

HEAD即代表现在所在分支的提交区的样子,每个提交区对应一条log，可以使用git log查看某一条log之后，使用git reset --hard [log记录]将工作区同步为该log时的样子

本地做的任何修改就是对本地工作目录进行修改，使用git add之后，会将本地某些文件同步到暂存区, git commit -m ".." 之后，会将暂存区的所有修改提交到提交区

使用git reset HEAD 可以将暂存区删除（可以看做提交区的所有内容同步到暂存区）
使用git checkout 可以切换分支，同时工作区的内容也会随之变动（即每个分支提交区的样子）
使用git checkout -- [文件] 可以将暂存区的样子同步到本地工作目录中

git checkout -b [分支名] 可以建立一个新分支并切换到它之上,git checkout -b [分支名] [远程主机分支名] 可以建立一个新的分支，同时将本地分支和远程分支建立一个映射并切换到新的这个分支上面。
                            如：git checkout -b test2 origin/test2
                                git branch set-upstream-to [远程主机分支名] 可以建立本地所在分支和网络远程分支的映射

git diff可以查看工作区和暂存区文件的不同之处
git diff --cached可以查看暂存区和提交区文件的不同之处
git diff HEAD可以查看提交区和工作区文件的不同之处
（以上三条diff命令，只有那些被跟踪的文件（即使用git add加入暂存区的文件）才能看到）

git branch -d [分支名] 可以删除某一个分支
git merge [分支名]可以将一个分支合并到本分支之上

git reflog 可以查看git的命令历史记录

git clone -b 可以克隆对应的分支
git@github.com:sgFlags/notes.git 用ssh方式访问某个github的repo（此处sgFlags是用户名，notes.git是repo名）
