linux中shell变量$#,$@,$0,(,[的含义解释: 
变量说明: 
$$ 
Shell本身的PID（ProcessID） 
$! 
Shell最后运行的后台Process的PID 
$? 
最后运行的命令的结束代码（返回值） 
$- 
使用Set命令设定的Flag一览 
$* 
所有参数列表。如"$*"用「"」括起来的情况、以"( [ … $n"的形式输出所有参数。 
$@ 
所有参数列表。如"$@"用「"」括起来的情况、以"(" "[" … "$n" 的形式输出所有参数。 
$# 
添加到Shell的参数个数 
$0 
Shell本身的文件名 
$1～$n 
添加到Shell的各参数值。(是第1参数、[是第2参数…。 ]))])])])


[ -n $1 ]:即第一个参数不为null 

unset 可以删除变量

获取字符串长度
string="abcd"
echo ${#string} #输出 4


提取子字符串
以下实例从字符串第 2 个字符开始截取 4 个字符：
string="runoob is a great site"
echo ${string:1:4} # 输出 unoo


cut命令（字符串操作重要command)
(cut所指定的列下标从1开始计算）
https://www.cnblogs.com/Spiro-K/p/6361646.html

expr match $string 正则表达式 
此命令可以找到string变量从头开始和正则表达式匹配的字符串的长度，如果在正则表达式中有了小括号，则代表不打印长度，而是将和括号中正则表达式部分的匹配的字符串输出

替换
%s/正则表达式/目标字符串/g
其中，%s代表全文替换，g代表


shell中正则表达式
http://blog.51cto.com/13466287/2065604

字符串替换
第三种模式：${var/pattern/pattern}表示将var字符串的第一个匹配的pattern替换为另一个pattern。。        
第四种模式：${var//pattern/pattern}表示将var字符串中的所有能匹配的pattern替换为另一个pattern.

shell大小写敏感

shell中，双小括号可以写算术表达式，双中括号可以写字符串匹配之类的表达式

awk命令（脚本）详解
http://www.runoob.com/linux/linux-comm-awk.html
